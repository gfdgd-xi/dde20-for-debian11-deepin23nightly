Package: libboost-atomic1.67.0
Architecture: amd64
Version: 1.67.0-13+deb10u1
Multi-Arch: same
Priority: optional
Section: libs
Source: boost1.67
Maintainer: Debian Boost Team <team+boost@tracker.debian.org>
Installed-Size: 2017
Depends: libc6 (>= 2.2.5), libgcc1 (>= 1:3.0), libstdc++6 (>= 4.1.1)
Filename: ./l/libboost-atomic1.67.0/libboost-atomic1.67.0_1.67.0-13+deb10u1_amd64.deb
Size: 225812
MD5sum: f7ca1a0f9991bc20206f6d09b91377f4
SHA1: 68a5718464b0106a83bd302247bfd304e3aa99ff
SHA256: f549f051877b4a87e02640c58a2e2c117c944af8ece79141908af5a3f2dffda4
SHA512: d53ecf85a5fc1163780073394c65c4a50b922806a1b3d51dbf3d63df086699bb18a83186bd56d23d7bc9b5ec220aa6e083c4cf4644d6d1ceeba38f4e98a127db
Homepage: http://www.boost.org/libs/atomic/
Description: atomic data types, operations, and memory ordering constraints
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Atomic is a library that provides atomic data types and
 operations on these data types, as well as memory ordering
 constraints required for coordinating multiple threads through atomic
 variables. It implements the interface as defined by the C++11
 standard, but makes this feature available for platforms lacking
 system/compiler support for this particular C++11 feature.
 .
 Users of this library should already be familiar with concurrency in
 general, as well as elementary concepts such as "mutual exclusion".
 .
 The implementation makes use of processor-specific instructions where
 possible (via inline assembler, platform libraries or compiler
 intrinsics), and falls back to "emulating" atomic operations through
 locking.

